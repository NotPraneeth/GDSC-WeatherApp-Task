{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rspha\\\\OneDrive\\\\Documents\\\\WEB-DEV\\\\GDSC\\\\weather-app-v2-react\\\\src\\\\DailyForecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport OneDayWeather from \"./OneDayWeather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DailyForecast(props) {\n  _s();\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DailyForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-3 row-cols-lg-6\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 6) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(OneDayWeather, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 28\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }, this);\n  } else {\n    const apiKey = \"5863935ee9cca4c02ed68203f807c65b\";\n    const latitude = props.coordinates.lat;\n    const longitude = props.coordinates.lon;\n    const apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n_s(DailyForecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n_c = DailyForecast;\nvar _c;\n$RefreshReg$(_c, \"DailyForecast\");","map":{"version":3,"names":["React","useState","useEffect","axios","OneDayWeather","DailyForecast","props","loaded","setLoaded","forecast","setForecast","coordinates","handleResponse","response","data","daily","map","dailyForecast","index","apiKey","latitude","lat","longitude","lon","apiUrl","get","then"],"sources":["C:/Users/rspha/OneDrive/Documents/WEB-DEV/GDSC/weather-app-v2-react/src/DailyForecast.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport OneDayWeather from \"./OneDayWeather\";\r\n\r\nexport default function DailyForecast(props) {\r\n   let [loaded, setLoaded] = useState(false);\r\n   let [forecast, setForecast] = useState(null);\r\n\r\n   useEffect(() => {\r\n      setLoaded(false);\r\n   }, [props.coordinates]);\r\n\r\n   function handleResponse(response) {\r\n      setForecast(response.data.daily);\r\n      setLoaded(true);\r\n   }\r\n\r\n   if (loaded) {\r\n      return (\r\n         <div className=\"DailyForecast\">\r\n            <div className=\"row row-cols-3 row-cols-lg-6\">\r\n               {forecast.map(function (dailyForecast, index) { \r\n                  if (index < 6) {\r\n                     return (\r\n                        <div className=\"mb-4\" key={index}>\r\n                           <OneDayWeather data={dailyForecast} />\r\n                        </div>\r\n                     );\r\n                  } else {\r\n                     return null;\r\n                  }\r\n               })}\r\n            </div>\r\n         </div>\r\n      );\r\n   } else {\r\n      const apiKey = \"5863935ee9cca4c02ed68203f807c65b\";\r\n      const latitude = props.coordinates.lat;\r\n      const longitude = props.coordinates.lon;\r\n      const apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\r\n\r\n      axios.get(apiUrl).then(handleResponse);\r\n\r\n      return null;\r\n   }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAE5C,eAAe,SAASC,aAAa,CAACC,KAAK,EAAE;EAAA;EAC1C,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACzC,IAAI,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACbM,SAAS,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,CAACF,KAAK,CAACK,WAAW,CAAC,CAAC;EAEvB,SAASC,cAAc,CAACC,QAAQ,EAAE;IAC/BH,WAAW,CAACG,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;IAChCP,SAAS,CAAC,IAAI,CAAC;EAClB;EAEA,IAAID,MAAM,EAAE;IACT,oBACG;MAAK,SAAS,EAAC,eAAe;MAAA,uBAC3B;QAAK,SAAS,EAAC,8BAA8B;QAAA,UACzCE,QAAQ,CAACO,GAAG,CAAC,UAAUC,aAAa,EAAEC,KAAK,EAAE;UAC3C,IAAIA,KAAK,GAAG,CAAC,EAAE;YACZ,oBACG;cAAK,SAAS,EAAC,MAAM;cAAA,uBAClB,QAAC,aAAa;gBAAC,IAAI,EAAED;cAAc;gBAAA;gBAAA;gBAAA;cAAA;YAAG,GADdC,KAAK;cAAA;cAAA;cAAA;YAAA,QAE1B;UAEZ,CAAC,MAAM;YACJ,OAAO,IAAI;UACd;QACH,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA,QACH;EAEZ,CAAC,MAAM;IACJ,MAAMC,MAAM,GAAG,kCAAkC;IACjD,MAAMC,QAAQ,GAAGd,KAAK,CAACK,WAAW,CAACU,GAAG;IACtC,MAAMC,SAAS,GAAGhB,KAAK,CAACK,WAAW,CAACY,GAAG;IACvC,MAAMC,MAAM,GAAI,uDAAsDJ,QAAS,QAAOE,SAAU,UAASH,MAAO,eAAc;IAE9HhB,KAAK,CAACsB,GAAG,CAACD,MAAM,CAAC,CAACE,IAAI,CAACd,cAAc,CAAC;IAEtC,OAAO,IAAI;EACd;AACH;AAAC,GAzCuBP,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}